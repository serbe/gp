package main

import (
	"log"
	"os"

	//	"github.com/PuerkitoBio/goquery"
	"github.com/PuerkitoBio/goquery"
	"github.com/headzoo/surf"
	"github.com/headzoo/surf/browser"
)

func parseFPL(bow *browser.Browser) {
	var ips []string
	//	var links []string
	bow.Dom().Find("tr").Each(func(_ int, s *goquery.Selection) {
		td := s.Find("td")
		if td.Length() == 11 {
			ips = append(ips, td.Eq(8).Text()+"://"+td.Eq(0).Text()+":"+td.Eq(2).Text())
		}
	})
	bow.Dom().Find("ul.pagination li a").Each(func(_ int, s *goquery.Selection) {
		//		td := s.Find("li")
		//		if td.Length() == 11 {
		//			ips = append(ips, td.Eq(8).Text()+"://"+td.Eq(0).Text()+":"+td.Eq(2).Text())
		//		}
		log.Println(s.Text())
	})
	//	for _, link := range bow.Links() {
	//		log.Println(link.URL.Path)
	//		if strings.Contains(link.Text, "/free/inha/") {
	//			links = append(links, link.Text)
	//		}
	//	}
	f, err := os.Create("fpl.html")
	if err != nil {
		log.Println(err)
	}
	bow.Download(f)
	log.Println(ips)
	//	log.Println(links)

}

func main() {
	bow := surf.NewBrowser()
	err := bow.Open("https://free-proxy-list.com/")
	if err != nil {
		panic(err)
	}
	parseFPL(bow)
}
